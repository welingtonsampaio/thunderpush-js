/**
 * Thunderpush javascript client - based in (https://github.com/thunderpush/thunderpush-js)
 * @version v2.0.0 - 2014-12-08
 * @link https://github.com/welingtonsampaio/thunderpush-js
 * @author Welington Sampaio
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
var isMSIE=0;!function(a,b){"use strict";var c=Array.prototype,d=Object.prototype,e=Function.prototype,f=(c.push,c.slice,c.concat,d.toString,d.hasOwnProperty,c.forEach,c.map,c.reduce,c.reduceRight,c.filter,c.every,c.some,c.indexOf),g=(c.lastIndexOf,Array.isArray,Object.keys,e.bind,function(a){return a instanceof g?a:this instanceof g?void(this._wrapped=a):new g(a)});"function"!=typeof/./&&(g.isFunction=function(a){return"function"==typeof a}),g.identity=function(a){return a},g.lookupIterator=function(a){return g.isFunction(a)?a:function(b){return b[a]}},g.sortedIndex=function(a,b,c,d){c=null==c?g.identity:g.lookupIterator(c);for(var e=c.call(d,b),f=0,h=a.length;h>f;){var i=f+h>>>1;c.call(d,a[i])<e?f=i+1:h=i}return f},g.indexOf=function(a,b,c){if(null==a)return-1;var d=0,e=a.length;if(c){if("number"!=typeof c)return d=g.sortedIndex(a,b),a[d]===b?d:-1;d=0>c?Math.max(0,e+c):c}if(f&&a.indexOf===f)return a.indexOf(b,c);for(;e>d;d++)if(a[d]===b)return d;return-1},g.extends=function(a,c){var d;for(d in c)a.hasOwnProperty(d)&&a[d]!==b&&null!==a[d]||(a[d]=c[d]);return a},a._=g}(window),function(a,b){"use strict";var c;c=function(){function a(a,b,d,e){c++,this.id=c,this.handler_events=[],this.thunder=a,this.name=b,this.onSubscribeSuccess=d,this.onSubscribeError=e,this.subscribe()}var c=0;return a.prototype.handler_events=b,a.prototype.bind=function(a,b){if("string"!=typeof a||!_.isFunction(b))throw{name:"thunder.channel.bind",message:"Invalid arguments type"};this.thunder.log("New handler has been registered to event '",a,"' and channel '",this.name,"'."),this.handler_events.push([a,b])},a.prototype.unbind=function(a,c){var d,e,f=[];if(this.thunder.log("Removes handler registered to event '",a,"' and channel '",this.name,"'."),a===b)return f=this.handler_events,this.handler_events=[],f;for(d=this.handler_events.length,e=d-1;e>=0;e--)this.handler_events[e][0]!==a||c&&this.handler_events[e][1]!==c||f.push(this.handler_events.splice(e,1));return f},a.prototype.subscribe=function(){if("string"!=typeof this.name||this.name.length<=0)throw{name:"channel.invalid",message:"Channel is not a string"};if(this.thunder.conn.socket.readyState===SockJS.OPEN)return this.thunder.channels.find(this.name)?("function"==typeof this.onSubscribeSuccess&&this.onSubscribeSuccess(this,"Channel already subscribed"),!0):(this.thunder.conn.socket.send("SUBSCRIBE "+this.name),this.thunder.channels.add(this),"function"==typeof this.onSubscribeSuccess&&this.onSubscribeSuccess(this,"Channel subscribed"),!0);throw"function"==typeof this.onSubscribeError&&this.onSubscribeError(this,"Socket not open"),{name:"socket.status",message:"Socket not OPEN: "+this.thunder.conn.socket.readyState}},a.prototype.unsubscribe=function(a,b){if(this.thunder.conn.socket.readyState===SockJS.OPEN)return this.thunder.conn.socket.send("UNSUBSCRIBE "+this.name),this.thunder.channels.remove(this.name),"function"==typeof a&&a(this,"Channel unsubscribed"),!0;throw"function"==typeof b&&b(this,"Socket not open"),{name:"socket.status",message:"Socket not OPEN: "+this.thunder.conn.socket.readyState}},a.prototype.trigger=function(a,b){var c;for(c in this.handler_events)this.handler_events[c][0]==a&&this.handler_events[c][1](b)},a}(),a.ThunderChannel=c}(window),function(a){"use strict";var b;b=function(){function a(){this.id=b+1,b++,this.channels=new Object}var b=1;return a.prototype.add=function(a){if(!a.name)throw{name:"thunder.channel.collection.already_exists",message:"Channel.name not found."};if(this.find(a.name))throw{name:"thunder.channel.collection.already_exists",message:"["+this.id+"] Channel '"+a.name+"' already exists."};return this.channels[a.name]=a,!0},a.prototype.remove=function(a){return this.find(a)?(delete this.channels[a],!0):!1},a.prototype.find=function(a,b){return this.channels.hasOwnProperty(a)?(_.isFunction(b)&&b(this.channels[a]),this.channels[a]):!1},a}(),a.ThunderChannelCollection=b}(window),function(a,b){"use strict";var c;c=function(){function a(a){this.thunder=a,this.options=a.options,this.handlers=[],this.connect()}return a.prototype.reconnect_tries=0,a.prototype.reconnect_delays=[1e3,2500,5e3,1e4,3e4,6e4],a.prototype.handlers=b,a.prototype.onopen=b,a.prototype.onmessage=b,a.prototype.onerror=b,a.prototype.onclose=b,a.prototype.onSockOpen=function(a){_.isFunction(a)&&(this.onopen=a)},a.prototype.onSockMessage=function(a){_.isFunction(a)&&(this.onmessage=a)},a.prototype.onSockError=function(a){_.isFunction(a)&&(this.onerror=a)},a.prototype.onSockClose=function(a){_.isFunction(a)&&(this.onclose=a)},a.prototype.connect=function(){var a;a=this,this.socket=new SockJS(this.options.server,b,{debug:this.options.log}),this.socket.onopen=function(){_.isFunction(a.onOpen)&&(a.thunder.log("Connection has been estabilished."),a.onOpen&&a.onopen.apply(a,arguments),a.reconnect_tries=0,a.socket.send("CONNECT "+a.options.user+":"+a.options.apikey),a.thunder.channels.length&&a.socket.send("SUBSCRIBE "+a.thunder.channels.join(":")))},this.socket.onmessage=function(b){var c,d,e,f,g;a.thunder.log("Message has been received",b.data),a.onmessage&&a.onmessage.apply(a,arguments),f=b.data.channel,g=b.data.event;try{c=JSON.parse(b.data.payload)}catch(b){throw"Exception in conversion data"}for(d=0,e=a.handlers.length;e>d;d++)a.handlers[d](c);_.isFunction(a.onMessage)&&a.onMessage.call(a,arguments)},this.socket.onerror=function(){a.onerror&&a.onerror.apply(a,arguments)},this.socket.onclose=function(b){if(a.thunder.log("Connection has been lost."),a.onclose&&a.onclose.apply(a,arguments),a.options.retry===!1)return void a.thunder.log("Reconnect supressed because of retry option false");if(9e3===b.code||9001===b.code||9002===b.code)return void a.thunder.log("Reconnect supressed because of:",b);var c=a.reconnect_delays[a.reconnect_tries]||a.reconnect_delays[a.reconnect_delays.length-1];a.thunder.log("Reconnecting in",c,"ms..."),a.reconnect_tries++,setTimeout(function(){a.connect()},c)}},a.prototype.disconnect=function(){var a=this;return this.socket.onclose=function(){this.onclose&&this.onclose.apply(a,arguments)},this.socket.readyState===SockJS.OPEN?this.socket.close():!1},a}(),a.ThunderConnect=c}(window),function(a,b){"use strict";var c;c=function(){function c(a){a===b&&(a={}),a=_.extends(a,d),this.options=a,this.verifyOptions(),this.options.server=e(this.options.server),this.channels=new ThunderChannelCollection,this.connect()}var d,e;return d={log:!1,retry:!0,headers:{},params:{},server:b,apikey:b,user:b},e=function(a){return-1===a.indexOf("http")&&(a="http://"+a),a.indexOf("/connect")!==a.length-8&&(a+="/connect"),a},c.prototype.channels=b,c.prototype.connect=function(){this.conn=new ThunderConnect(this)},c.prototype.disconnect=function(){return this.conn.disconnect()},c.prototype.verifyOptions=function(){var a,c,d,e;for(a="server apikey user".split(" "),c=0,d=a.length;d>c;c++)if(e=a[c],!this.options.hasOwnProperty(e)||this.options[e]===b||null===this.options[e])throw{name:"thunder.options",message:"Property "+a[c]+" is required!"};return!0},c.prototype.subscribe=function(a,b,c){this.channels.find(a,function(a){_.isFunction(b)&&b(a)})||new ThunderChannel(this,a,b,c)},c.prototype.unsubscribe=function(a,b,c){var d;d=this,this.channels.find(a,function(e){e.unsubscribe(b,c),d.remove(a)})},c.prototype.bind=function(a,b,c){this.subscribe(a,function(a){a.bind(b,c)})},c.prototype.unbind=function(a){var b;b=a.splice(0,1),this.channels.find(b,function(b){b.unbind.apply(a)})},c.prototype.listen=function(a){this.log("New handler has been registered."),this.conn.handlers.push(a)},c.prototype.log=function(){if(this.options.log&&"console"in a&&"log"in a.console)if(1===arguments.length)console.log(arguments[0]);else if(isMSIE){var b=Function.prototype.bind.call(console.log,console);b.apply(console,Array.prototype.slice.call(arguments))}else console.log.apply(console,Array.prototype.slice.call(arguments))},c}(),a.Thunder=c}(window);